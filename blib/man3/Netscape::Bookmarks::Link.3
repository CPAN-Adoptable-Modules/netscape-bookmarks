.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Netscape::Bookmarks::Link 3"
.TH Netscape::Bookmarks::Link 3 "2014-10-08" "perl v5.18.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Netscape::Bookmarks::Link	\- manipulate, or create Netscape Bookmarks links
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Netscape::Bookmarks::Link;
\&
\&  my $category = new Netscape::Bookmarks::Category { ... };
\&  my $link = new Netscape::Bookmarks::Link {
\&                TITLE         => \*(Aqthis is the title\*(Aq,
\&                DESCRIPTION   => \*(Aqthis is the description\*(Aq,
\&                HREF          => \*(Aqhttp://www.perl.org\*(Aq,
\&                ADD_DATE      => 937862073,
\&                LAST_VISIT    => 937862073,
\&                LAST_MODIFIED => 937862073,
\&                ALIAS_ID      => 4,
\&                }
\&
\&  $category\->add($link);
\&
\&
\&  #print a Netscape compatible file
\&  print $link\->as_string;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Netscape bookmarks file has several basic components:
.PP
.Vb 5
\&        title
\&        folders (henceforth called categories)
\&        links
\&        aliases
\&        separators
.Ve
.PP
On disk, Netscape browsers store this information in \s-1HTML.\s0 In the browser,
it is displayed under the \*(L"Bookmarks\*(R" menu.  The data can be manipulated
through the browser interface.
.PP
This module allows one to manipulate the links in for a Netscape bookmarks
file.  A link has these attributes, only some of which may be present:
.PP
.Vb 8
\&        title
\&        description
\&        HREF (i.e. URL)
\&        ADD_DATE
\&        LAST_MODIFIED
\&        LAST_VISIT
\&        ALIAS_OF
\&        ALIAS_ID
.Ve
.PP
Additionally, Mozilla (the open source version of Navigator) uses these
attributes:
.PP
.Vb 7
\&        SHORTCUTURL
\&        ICON
\&        SCHEDULE
\&        LAST_PING
\&        LAST_CHARSET
\&        PING_CONTENT_LEN
\&        PING_STATUS
.Ve
.SH "METHODS"
.IX Header "METHODS"
.IP "Netscape::Bookmarks::Link\->new( \e%hash )" 4
.IX Item "Netscape::Bookmarks::Link->new( %hash )"
Creates a new Link object. The hash reference argument
can have the following keys to set the properties of the
link:
.Sp
.Vb 6
\&        HREF
\&        ADD_DATE
\&        LAST_MODIFIED
\&        LAST_VISIT
\&        ALIASID
\&        ALIASOF
\&
\&        SHORTCUTURL
\&        ICON
\&        LAST_CHARSET
.Ve
.ie n .IP "$obj\->href" 4
.el .IP "\f(CW$obj\fR\->href" 4
.IX Item "$obj->href"
Returns the \s-1URL\s0 of the link.  The \s-1URL\s0 appears in the \s-1HREF\s0 attribute of
the anchor tag.
.ie n .IP "$obj\->add_date" 4
.el .IP "\f(CW$obj\fR\->add_date" 4
.IX Item "$obj->add_date"
Returns the date when the link was added, in Unix epoch time.
.ie n .IP "$obj\->last_modified" 4
.el .IP "\f(CW$obj\fR\->last_modified" 4
.IX Item "$obj->last_modified"
Returns the date when the link was last modified, in Unix epoch time.  Returns
zero if no information is available.
.ie n .IP "$obj\->last_visit" 4
.el .IP "\f(CW$obj\fR\->last_visit" 4
.IX Item "$obj->last_visit"
Returns the date when the link was last vistied, in Unix epoch time. Returns
zero if no information is available.
.ie n .IP "$obj\->title( [ \s-1TITLE \s0] )" 4
.el .IP "\f(CW$obj\fR\->title( [ \s-1TITLE \s0] )" 4
.IX Item "$obj->title( [ TITLE ] )"
Sets the link title with the given argument, and returns the link title.
If the argument is not defined (e.g. not specified), returns the current
link title.
.ie n .IP "$obj\->description( [ \s-1DESCRIPTION \s0] )" 4
.el .IP "\f(CW$obj\fR\->description( [ \s-1DESCRIPTION \s0] )" 4
.IX Item "$obj->description( [ DESCRIPTION ] )"
Sets the link description with the given argument, and returns the link
description. If the argument is not defined (e.g. not specified),
returns the current link description.
.ie n .IP "$obj\->alias_id" 4
.el .IP "\f(CW$obj\fR\->alias_id" 4
.IX Item "$obj->alias_id"
Returns the alias id of a link. Links with aliases are assigned an \s-1ALIAS_ID\s0 which
associates them with the alias.  The alias contains the same value in it's \s-1ALIAS_OF\s0
field.  The Netscape::Bookmarks::Alias module handles aliases as references to
Netscape::Bookmarks::Link objects.
.ie n .IP "$obj\->shortcuturl" 4
.el .IP "\f(CW$obj\fR\->shortcuturl" 4
.IX Item "$obj->shortcuturl"
.PD 0
.ie n .IP "$obj\->icon" 4
.el .IP "\f(CW$obj\fR\->icon" 4
.IX Item "$obj->icon"
.ie n .IP "$obj\->schedule" 4
.el .IP "\f(CW$obj\fR\->schedule" 4
.IX Item "$obj->schedule"
.ie n .IP "$obj\->last_ping" 4
.el .IP "\f(CW$obj\fR\->last_ping" 4
.IX Item "$obj->last_ping"
.ie n .IP "$obj\->ping_content_len" 4
.el .IP "\f(CW$obj\fR\->ping_content_len" 4
.IX Item "$obj->ping_content_len"
.ie n .IP "$obj\->ping_status" 4
.el .IP "\f(CW$obj\fR\->ping_status" 4
.IX Item "$obj->ping_status"
.ie n .IP "$obj\->last_charset" 4
.el .IP "\f(CW$obj\fR\->last_charset" 4
.IX Item "$obj->last_charset"
.ie n .IP "$obj\->as_string" 4
.el .IP "\f(CW$obj\fR\->as_string" 4
.IX Item "$obj->as_string"
.PD
Returns a Netscape compatible bookmarks file based on the Bookmarks object.
.ie n .IP "$obj\->remove" 4
.el .IP "\f(CW$obj\fR\->remove" 4
.IX Item "$obj->remove"
Performs any clean up necessary to remove this object from the
Bookmarks tree. Although this method does not remove Alias objects
which point to the Link, it probably should.
.SH "TO DO"
.IX Header "TO DO"
.Vb 1
\&        * Add methods for manipulating attributes
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
brian d foy \f(CW\*(C`<bdfoy@cpan.org>\*(C'\fR
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2002\-2014, brian d foy, All rights reserved
.PP
This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Netscape::Bookmarks
